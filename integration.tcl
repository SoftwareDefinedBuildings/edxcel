#
# Vivado (TM) v2014.3.1 (64-bit)
#
# integration.tcl: Tcl script for re-creating project 'Avnet-Digilent-ZedBoard-2014.2'
#
# Generated by Vivado on Sat Nov 22 13:22:29 PST 2014
# IP Build 1028902 on Fri Sep 26 17:35:13 MDT 2014
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir [file dirname [info script]]
set targetpart "xc7z020clg484-1"

# Create project
create_project integration $origin_dir/integration

# Set project properties
set obj [get_projects integration]
set_property "board_part" "em.avnet.com:zed:part0:1.0" $obj
set_property "default_lib" "xil_defaultlib" $obj
set_property "simulator_language" "Mixed" $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
set_property "ip_repo_paths" "[file normalize "$origin_dir/"]" $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
]
# "[file normalize "$origin_dir/verilog/bd/zed.bd"]"\
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
]
# "[file normalize "$origin_dir/verilog/src/zed_wrapper.v"]"\
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
#set_property "top" "zed_wrapper" $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/verilog/xdc/zed.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "$origin_dir/verilog/xdc/zed.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property "target_constrs_file" "[file normalize "$origin_dir/verilog/xdc/zed.xdc"]" $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property "top" "zed_wrapper" $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
  create_run -name synth_1 -part $targetpart -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs synth_1]
}
set obj [get_runs synth_1]

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
  create_run -name impl_1 -part $targetpart -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs impl_1]
}
set obj [get_runs impl_1]

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:integration"

source $origin_dir/integration_bd.tcl

make_wrapper -files [get_files $origin_dir/integration/integration.srcs/sources_1/bd/zed/zed.bd] -top
import_files -force -norecurse $origin_dir/integration/integration.srcs/sources_1/bd/zed/hdl/zed_wrapper.v
update_compile_order -fileset sources_1
update_compile_order -fileset sim_1
