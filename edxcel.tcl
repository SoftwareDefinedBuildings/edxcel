#
# Vivado (TM) v2014.3.1 (64-bit)
#
# ed.tcl: Tcl script for re-creating project 'project2'
#
# Generated by Vivado on Sat Nov 22 12:38:54 PST 2014
# IP Build 1028902 on Fri Sep 26 17:35:13 MDT 2014
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (ed.tcl) that was generated.
#
#
# 2. The remote source files that were added to the original project:-
#
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir [file dirname [info script]]
set targetpart "xc7z020clg484-1"
 
# Create project
create_project edxcel $origin_dir/edxcel

# Set project properties
set obj [get_projects edxcel]
set_property "board_part" "em.avnet.com:zed:part0:1.2" $obj
set_property "default_lib" "xil_defaultlib" $obj
set_property "simulator_language" "Mixed" $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
#set obj [get_filesets sources_1]
#set_property "ip_repo_paths" "[file normalize "$origin_dir/edxcel"]" $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/verilog/ip/mult32x64/mult32x64.xci"]"\
 "[file normalize "$origin_dir/verilog/ip/mult19/mult19.xci"]"\
 "[file normalize "$origin_dir/verilog/ip/clk_wiz_0/clk_wiz_0.xci"]"\
 "[file normalize "$origin_dir/verilog/ip/fifo_generator_0/fifo_generator_0.xci"]"\
 "[file normalize "$origin_dir/verilog/ip/blk_mem_gen_0/blk_mem_gen_0.xci"]"\
 "[file normalize "$origin_dir/verilog/ip/add64/add64.xci"]"\
 "[file normalize "$origin_dir/verilog/src/fe/fe_common.v"]"\
 "[file normalize "$origin_dir/verilog/src/fe/fe_pow22523.v"]"\
 "[file normalize "$origin_dir/verilog/src/fe/fe_invert.v"]"\
 "[file normalize "$origin_dir/verilog/src/fe/fe_mulx.v"]"\
 "[file normalize "$origin_dir/verilog/src/ge/ge_frombytes_negate_vartime.v"]"\
 "[file normalize "$origin_dir/verilog/src/ge/ge_double_scalarmult_vartime.v"]"\
 "[file normalize "$origin_dir/verilog/src/ge/consts.coe"]"\
 "[file normalize "$origin_dir/verilog/src/EPU.v"]"\
 "[file normalize "$origin_dir/verilog/src/EdXel_v1_S00_AXI.v"]"\
 "[file normalize "$origin_dir/verilog/src/EdXel_v1.v"]"\
 "[file normalize "$origin_dir/component.xml"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/verilog/ip/mult32x64/mult32x64.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "generate_synth_checkpoint" "0" $file_obj

set file "$origin_dir/verilog/ip/mult19/mult19.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "generate_synth_checkpoint" "0" $file_obj

set file "$origin_dir/verilog/src/fe/fe_common.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "Verilog Header" $file_obj

set file "$origin_dir/verilog/ip/blk_mem_gen_0/blk_mem_gen_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "generate_synth_checkpoint" "0" $file_obj

set file "$origin_dir/verilog/ip/add64/add64.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "generate_synth_checkpoint" "0" $file_obj

set file "$origin_dir/verilog/ip/fifo_generator_0/fifo_generator_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "generate_synth_checkpoint" "0" $file_obj

set file "$origin_dir/verilog/ip/clk_wiz_0/clk_wiz_0.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "generate_synth_checkpoint" "0" $file_obj

set file "$origin_dir/component.xml"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "IP-XACT" $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property "top" "EdXel_v1" $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/verilog/constraints.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "$origin_dir/verilog/constraints.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property "target_constrs_file" "[file normalize "$origin_dir/verilog/constraints.xdc"]" $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 "[file normalize "$origin_dir/verilog/src/testbed/ge_double_scalarmult_vartime_tb.v"]"\
 "[file normalize "$origin_dir/verilog/src/testbed/EPU_tb.v"]"\
 "[file normalize "$origin_dir/verilog/src/testbed/ge_frombytes_negate_vartime_tb.v"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property "top" "ge_double_scalarmult_vartime_tb" $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
  create_run -name synth_1 -part $targetpart -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property "needs_refresh" "1" $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
  create_run -name impl_1 -part $targetpart -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs impl_1]
}
set obj [get_runs impl_1]

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:edxcel"
